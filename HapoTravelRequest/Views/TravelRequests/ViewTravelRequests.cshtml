@model List<HapoTravelRequest.Models.TravelRequest.TravelRequestListVM>
@{
  ViewData["Title"] = "View Travel Requests";
}

<div class="container mt-4">
  <!-- Search and Sort -->
  <div class="d-flex justify-content-between align-items-center mb-3">
    <input type="text" id="searchInput" placeholder="Search Travel Requests" class="form-control w-50" />
    <select id="filterSelect" class="form-select w-auto ms-2">
      <option value="">Filter by</option>
      <option value="ToReview">To Review</option>
      <option value="ToBook">To Book</option>
    </select>
    <select id="sortSelect" class="form-select w-auto">
      <option selected>Sort by: Name</option>
      <option>Sort by: Start Date</option>
      <option>Sort by: Status</option>
    </select>
  </div>

  <!-- Table -->
  <table class="table table-hover align-middle">
    <thead class="table-light">
      <tr>
        <th>Employee Name</th>
        <th>Conference</th>
        <th>Location</th>
        <th>Start Date</th>
        <th>End Date</th>
        <th>Cost</th>
        <th>Quick Actions</th>
        <th>Status</th>
      </tr>
    </thead>
    <tbody id="travelRequestTable">
      @foreach (var request in Model)
      {
        <tr>
          <td>@request.FirstName @request.LastName</td>
          <td>@request.ConferenceDescription</td>
          <td>@request.Location</td>
          <td>@request.ConferenceStartDate?.ToString("MM/dd/yyyy")</td>
          <td>@request.ConferenceEndDate?.ToString("MM/dd/yyyy")</td>
          <td>$@request.CostOfConference</td>
          <td>
            @if (User.IsInRole("VP") || User.IsInRole("CEO"))
            {
              <a asp-action="ViewRequest" asp-route-id="@request.Id" class="btn btn-sm text-dark" title="View">
                <i class="bi bi-eye"></i>
              </a>
              <a asp-action="Edit" asp-route-id="@request.Id" class="btn btn-sm text-dark" title="Edit">
                <i class="bi bi-check-square"></i>
              </a>
              <a asp-action="Delete" asp-route-id="@request.Id" class="btn btn-sm text-dark" title="Cancel">
                <i class="bi bi-x-lg"></i>
              </a>
            }
            else if (User.IsInRole("Processor"))
            {
              <a asp-action="Delete" asp-route-id="@request.Id" class="btn btn-sm text-dark" title="Cancel">
                <i class="bi bi-x-lg"></i>
              </a>
            }
          </td>



          <td>
            <span class="btn btn-sm btn-warning">@request.ApprovalStatus</span>
          </td>
        </tr>
      }
    </tbody>
  </table>
  <div class="d-flex justify-content-end mt-3">
    <button class="btn btn-light me-2" onclick="prevPage()">
      <i class="bi bi-arrow-left"></i>
    </button>
    <button class="btn btn-light" onclick="nextPage()">
      <i class="bi bi-arrow-right"></i>
    </button>
  </div>

</div>
</HapoTravelRequest.Models.TravelRequest.TravelRequestListVM>

<script>
  let currentPage = 1;
  const rowsPerPage = 10;

  function showPage(page) {
    const rows = Array.from(document.querySelectorAll("#travelRequestTable tr"));
    const totalPages = Math.ceil(rows.length / rowsPerPage);
    rows.forEach(row => row.style.display = "none");

    const start = (page - 1) * rowsPerPage;
    const end = start + rowsPerPage;
    rows.slice(start, end).forEach(row => row.style.display = "");

    currentPage = page;
  }

  function nextPage() {
    const rows = document.querySelectorAll("#travelRequestTable tr");
    const totalPages = Math.ceil(rows.length / rowsPerPage);
    if (currentPage < totalPages) {
      showPage(currentPage + 1);
    }
  }

  function prevPage() {
    if (currentPage > 1) {
      showPage(currentPage - 1);
    }
  }

  // Init on page load
  document.addEventListener("DOMContentLoaded", () => {
    showPage(currentPage);
  });
</script>
